function validarContaAgenciaItau(agencia: string, conta: string): boolean {
  // Verifica se a agência e a conta são compostas somente por números
  if (!/^\d+$/.test(agencia) || !/^\d+$/.test(conta)) {
    return false;
  }

  // Verifica se a agência possui 4 dígitos
  if (agencia.length !== 4) {
    return false;
  }

  // Verifica se a conta possui 5, 6 ou 7 dígitos
  if (conta.length < 5 || conta.length > 7) {
    return false;
  }

  // Verifica se a conta é válida usando o algoritmo de validação do Itaú
  const digitoVerificador = conta.slice(-1);
  const numerosConta = conta.slice(0, -1).split("").reverse().map(Number);
  const soma = numerosConta.reduce((acc, curr, index) => {
    const peso = index % 2 === 0 ? 2 : 1;
    let resultado = curr * peso;
    if (resultado >= 10) {
      resultado = Math.floor(resultado / 10) + (resultado % 10);
    }
    return acc + resultado;
  }, 0);
  const resultado = 10 - (soma % 10);
  const digitoCalculado = resultado === 10 ? 0 : resultado;
  return digitoVerificador === digitoCalculado.toString();
}

function validarContaAgenciaBB(agencia: string, conta: string): boolean {
  // Verifica se a agência e a conta são compostas somente por números
  if (!/^\d+$/.test(agencia) || !/^\d+$/.test(conta)) {
    return false;
  }

  // Verifica se a agência possui 4 dígitos
  if (agencia.length !== 4) {
    return false;
  }

  // Verifica se a conta possui 8 dígitos
  if (conta.length !== 8) {
    return false;
  }

  // Verifica se a conta é válida usando o algoritmo de validação do Banco do Brasil
  const digitoVerificador = conta.slice(-1);
  const numerosConta = conta.slice(0, -1).split("").reverse().map(Number);
  const pesos = [9, 8, 7, 6, 5, 4, 3, 2];
  const soma = numerosConta.reduce((acc, curr, index) => {
    return acc + curr * pesos[index];
  }, 0);
  const resto = soma % 11;
  const digitoCalculado = resto === 0 || resto === 1 ? 0 : 11 - resto;
  return digitoVerificador === digitoCalculado.toString();
}


function validarContaAgenciaSantander(agencia: string, conta: string): boolean {
  // Verifica se a agência e a conta são compostas somente por números
  if (!/^\d+$/.test(agencia) || !/^\d+$/.test(conta)) {
    return false;
  }

  // Verifica se a agência possui 4 dígitos
  if (agencia.length !== 4) {
    return false;
  }

  // Verifica se a conta possui 9 dígitos
  if (conta.length !== 9) {
    return false;
  }

  // Verifica se a conta é válida usando o algoritmo de validação do Santander
  const digitoVerificador = conta.slice(-1);
  const numerosConta = conta.slice(0, -1).split("").reverse().map(Number);
  const pesos = [9, 7, 3, 1, 9, 7, 1, 3, 1];
  const soma = numerosConta.reduce((acc, curr, index) => {
    return acc + curr * pesos[index];
  }, 0);
  const resto = soma % 11;
  const digitoCalculado = resto === 0 || resto === 1 ? 0 : 11 - resto;
  return digitoVerificador === digitoCalculado.toString();
}


function validarContaAgenciaBradesco(agencia: string, conta: string): boolean {
  // Verifica se a agência e a conta são compostas somente por números
  if (!/^\d+$/.test(agencia) || !/^\d+$/.test(conta)) {
    return false;
  }

  // Verifica se a agência possui 4 dígitos
  if (agencia.length !== 4) {
    return false;
  }

  // Verifica se a conta possui 7 ou 8 dígitos
  if (conta.length !== 7 && conta.length !== 8) {
    return false;
  }

  // Verifica se a conta é válida usando o algoritmo de validação do Bradesco
  const digitoVerificador = conta.slice(-1);
  const numerosConta = conta.slice(0, -1).split("").reverse().map(Number);
  const pesos = conta.length === 8 ? [2, 7, 6, 5, 4, 3, 2] : [2, 7, 6, 5, 4, 3];
  const soma = numerosConta.reduce((acc, curr, index) => {
    return acc + curr * pesos[index];
  }, 0);
  const resto = soma % 11;
  const digitoCalculado = resto === 0 || resto === 1 ? 0 : 11 - resto;
  return digitoVerificador === digitoCalculado.toString();
}

function validarContaNubank(conta: string): boolean {
  // Verifica se a conta é composta somente por números
  if (!/^\d+$/.test(conta)) {
    return false;
  }

  // Verifica se a conta possui 9 dígitos
  if (conta.length !== 9) {
    return false;
  }

  // Verifica se a conta é válida usando o algoritmo de validação do Nubank
  const digitoVerificador = conta.slice(-1);
  const numerosConta = conta.slice(0, -1).split("").reverse().map(Number);
  const pesos = [9, 8, 7, 6, 5, 4, 3, 2, 1];
  const soma = numerosConta.reduce((acc, curr, index) => {
    return acc + curr * pesos[index];
  }, 0);
  const resto = soma % 11;
  const digitoCalculado = resto === 0 ? 0 : 11 - resto;
  return digitoVerificador === digitoCalculado.toString();
}
